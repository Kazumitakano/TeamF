// Code generated by go-swagger; DO NOT EDIT.

package scenepicks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/shortintern2020-C-cryptograph/TeamF/server/gen/models"
)

// GetTagOKCode is the HTTP code returned for type GetTagOK
const GetTagOKCode int = 200

/*GetTagOK 取得成功

swagger:response getTagOK
*/
type GetTagOK struct {

	/*
	  In: Body
	*/
	Payload *GetTagOKBody `json:"body,omitempty"`
}

// NewGetTagOK creates GetTagOK with default headers values
func NewGetTagOK() *GetTagOK {

	return &GetTagOK{}
}

// WithPayload adds the payload to the get tag o k response
func (o *GetTagOK) WithPayload(payload *GetTagOKBody) *GetTagOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag o k response
func (o *GetTagOK) SetPayload(payload *GetTagOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTagBadRequestCode is the HTTP code returned for type GetTagBadRequest
const GetTagBadRequestCode int = 400

/*GetTagBadRequest request error

swagger:response getTagBadRequest
*/
type GetTagBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetTagBadRequest creates GetTagBadRequest with default headers values
func NewGetTagBadRequest() *GetTagBadRequest {

	return &GetTagBadRequest{}
}

// WithPayload adds the payload to the get tag bad request response
func (o *GetTagBadRequest) WithPayload(payload models.Error) *GetTagBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag bad request response
func (o *GetTagBadRequest) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetTagInternalServerErrorCode is the HTTP code returned for type GetTagInternalServerError
const GetTagInternalServerErrorCode int = 500

/*GetTagInternalServerError internal serever error

swagger:response getTagInternalServerError
*/
type GetTagInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetTagInternalServerError creates GetTagInternalServerError with default headers values
func NewGetTagInternalServerError() *GetTagInternalServerError {

	return &GetTagInternalServerError{}
}

// WithPayload adds the payload to the get tag internal server error response
func (o *GetTagInternalServerError) WithPayload(payload models.Error) *GetTagInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag internal server error response
func (o *GetTagInternalServerError) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetTagDefault generic error response

swagger:response getTagDefault
*/
type GetTagDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetTagDefault creates GetTagDefault with default headers values
func NewGetTagDefault(code int) *GetTagDefault {
	if code <= 0 {
		code = 500
	}

	return &GetTagDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get tag default response
func (o *GetTagDefault) WithStatusCode(code int) *GetTagDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get tag default response
func (o *GetTagDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get tag default response
func (o *GetTagDefault) WithPayload(payload models.Error) *GetTagDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag default response
func (o *GetTagDefault) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

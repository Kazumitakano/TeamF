// Code generated by go-swagger; DO NOT EDIT.

package scenepicks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"bytes"
	"encoding/json"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostDialogIDCommentHandlerFunc turns a function with the right signature into a post dialog ID comment handler
type PostDialogIDCommentHandlerFunc func(PostDialogIDCommentParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostDialogIDCommentHandlerFunc) Handle(params PostDialogIDCommentParams) middleware.Responder {
	return fn(params)
}

// PostDialogIDCommentHandler interface for that can handle valid post dialog ID comment params
type PostDialogIDCommentHandler interface {
	Handle(PostDialogIDCommentParams) middleware.Responder
}

// NewPostDialogIDComment creates a new http.Handler for the post dialog ID comment operation
func NewPostDialogIDComment(ctx *middleware.Context, handler PostDialogIDCommentHandler) *PostDialogIDComment {
	return &PostDialogIDComment{Context: ctx, Handler: handler}
}

/*PostDialogIDComment swagger:route POST /dialog/{id}/comment postDialogIdComment

PostDialogIDComment post dialog ID comment API

*/
type PostDialogIDComment struct {
	Context *middleware.Context
	Handler PostDialogIDCommentHandler
}

func (o *PostDialogIDComment) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostDialogIDCommentParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostDialogIDCommentBody post dialog ID comment body
//
// swagger:model PostDialogIDCommentBody
type PostDialogIDCommentBody struct {

	// comment
	Comment string `json:"comment,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *PostDialogIDCommentBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// comment
		Comment string `json:"comment,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.Comment = props.Comment
	return nil
}

// Validate validates this post dialog ID comment body
func (o *PostDialogIDCommentBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostDialogIDCommentBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostDialogIDCommentBody) UnmarshalBinary(b []byte) error {
	var res PostDialogIDCommentBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

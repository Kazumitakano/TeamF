// Code generated by go-swagger; DO NOT EDIT.

package scenepicks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/shortintern2020-C-cryptograph/TeamF/server/gen/models"
)

// PostCommentByIDOKCode is the HTTP code returned for type PostCommentByIDOK
const PostCommentByIDOKCode int = 200

/*PostCommentByIDOK 投稿成功

swagger:response postCommentByIdOK
*/
type PostCommentByIDOK struct {

	/*
	  In: Body
	*/
	Payload *PostCommentByIDOKBody `json:"body,omitempty"`
}

// NewPostCommentByIDOK creates PostCommentByIDOK with default headers values
func NewPostCommentByIDOK() *PostCommentByIDOK {

	return &PostCommentByIDOK{}
}

// WithPayload adds the payload to the post comment by Id o k response
func (o *PostCommentByIDOK) WithPayload(payload *PostCommentByIDOKBody) *PostCommentByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post comment by Id o k response
func (o *PostCommentByIDOK) SetPayload(payload *PostCommentByIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCommentByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostCommentByIDBadRequestCode is the HTTP code returned for type PostCommentByIDBadRequest
const PostCommentByIDBadRequestCode int = 400

/*PostCommentByIDBadRequest request error

swagger:response postCommentByIdBadRequest
*/
type PostCommentByIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPostCommentByIDBadRequest creates PostCommentByIDBadRequest with default headers values
func NewPostCommentByIDBadRequest() *PostCommentByIDBadRequest {

	return &PostCommentByIDBadRequest{}
}

// WithPayload adds the payload to the post comment by Id bad request response
func (o *PostCommentByIDBadRequest) WithPayload(payload models.Error) *PostCommentByIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post comment by Id bad request response
func (o *PostCommentByIDBadRequest) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCommentByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostCommentByIDInternalServerErrorCode is the HTTP code returned for type PostCommentByIDInternalServerError
const PostCommentByIDInternalServerErrorCode int = 500

/*PostCommentByIDInternalServerError internal serever error

swagger:response postCommentByIdInternalServerError
*/
type PostCommentByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPostCommentByIDInternalServerError creates PostCommentByIDInternalServerError with default headers values
func NewPostCommentByIDInternalServerError() *PostCommentByIDInternalServerError {

	return &PostCommentByIDInternalServerError{}
}

// WithPayload adds the payload to the post comment by Id internal server error response
func (o *PostCommentByIDInternalServerError) WithPayload(payload models.Error) *PostCommentByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post comment by Id internal server error response
func (o *PostCommentByIDInternalServerError) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCommentByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*PostCommentByIDDefault generic error response

swagger:response postCommentByIdDefault
*/
type PostCommentByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPostCommentByIDDefault creates PostCommentByIDDefault with default headers values
func NewPostCommentByIDDefault(code int) *PostCommentByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PostCommentByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post comment by Id default response
func (o *PostCommentByIDDefault) WithStatusCode(code int) *PostCommentByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post comment by Id default response
func (o *PostCommentByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post comment by Id default response
func (o *PostCommentByIDDefault) WithPayload(payload models.Error) *PostCommentByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post comment by Id default response
func (o *PostCommentByIDDefault) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCommentByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

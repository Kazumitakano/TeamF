// Code generated by go-swagger; DO NOT EDIT.

package scenepicks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/shortintern2020-C-cryptograph/TeamF/gen/models"
)

// PostDialogOKCode is the HTTP code returned for type PostDialogOK
const PostDialogOKCode int = 200

/*PostDialogOK 投稿成功

swagger:response postDialogOK
*/
type PostDialogOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostDialogOK creates PostDialogOK with default headers values
func NewPostDialogOK() *PostDialogOK {

	return &PostDialogOK{}
}

// WithPayload adds the payload to the post dialog o k response
func (o *PostDialogOK) WithPayload(payload string) *PostDialogOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post dialog o k response
func (o *PostDialogOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostDialogOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostDialogBadRequestCode is the HTTP code returned for type PostDialogBadRequest
const PostDialogBadRequestCode int = 400

/*PostDialogBadRequest request error

swagger:response postDialogBadRequest
*/
type PostDialogBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPostDialogBadRequest creates PostDialogBadRequest with default headers values
func NewPostDialogBadRequest() *PostDialogBadRequest {

	return &PostDialogBadRequest{}
}

// WithPayload adds the payload to the post dialog bad request response
func (o *PostDialogBadRequest) WithPayload(payload models.Error) *PostDialogBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post dialog bad request response
func (o *PostDialogBadRequest) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostDialogBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostDialogInternalServerErrorCode is the HTTP code returned for type PostDialogInternalServerError
const PostDialogInternalServerErrorCode int = 500

/*PostDialogInternalServerError internal serever error

swagger:response postDialogInternalServerError
*/
type PostDialogInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPostDialogInternalServerError creates PostDialogInternalServerError with default headers values
func NewPostDialogInternalServerError() *PostDialogInternalServerError {

	return &PostDialogInternalServerError{}
}

// WithPayload adds the payload to the post dialog internal server error response
func (o *PostDialogInternalServerError) WithPayload(payload models.Error) *PostDialogInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post dialog internal server error response
func (o *PostDialogInternalServerError) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostDialogInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*PostDialogDefault generic error response

swagger:response postDialogDefault
*/
type PostDialogDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPostDialogDefault creates PostDialogDefault with default headers values
func NewPostDialogDefault(code int) *PostDialogDefault {
	if code <= 0 {
		code = 500
	}

	return &PostDialogDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post dialog default response
func (o *PostDialogDefault) WithStatusCode(code int) *PostDialogDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post dialog default response
func (o *PostDialogDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post dialog default response
func (o *PostDialogDefault) WithPayload(payload models.Error) *PostDialogDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post dialog default response
func (o *PostDialogDefault) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostDialogDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
